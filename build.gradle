plugins {
    id "org.flywaydb.flyway" version "6.5.7"
    id "org.jlleitschuh.gradle.ktlint" version "10.3.0"
    id "org.jlleitschuh.gradle.ktlint-idea" version "10.3.0"
    id "org.jetbrains.kotlinx.kover" version "0.5.1"
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'

}
group 'com.abrigo'
version '1.0.0-SNAPSHOT'
apply plugin : 'application'

mainClassName = "com.abrigo.itimalia.application.web.ItimaliaApplicationKt"
sourceCompatibility = 11

def excludedClasses = [
        "com.abrigo.itimalia.commons.koin.*",
        "com.abrigo.itimalia.application.web.accessmanagers.*",
        "com.abrigo.itimalia.application.web.handlers.*",
        "com.abrigo.itimalia.application.web.swagger.*",
        "com.abrigo.itimalia.application.web.ItimaliaApplication",
        "com.abrigo.itimalia.application.web.ItimaliaApplicationKt",
        "com.abrigo.itimalia.domain.exceptions.*",
        "com.abrigo.itimalia.application.config.*",
        "com.abrigo.itimalia.resources.images.cloudinary.CloudinaryConfig"
]

repositories {
    mavenCentral()
}

configurations.implementation.setCanBeResolved(true)

dependencies {

    //versions
    def javalinVersion = '4.6.1'
    def exposedVersion = '0.38.1'

    //javalin
    implementation 'io.javalin:javalin:' + javalinVersion
    implementation 'io.javalin:javalin-openapi:'+ javalinVersion
    implementation 'io.javalin:javalin-bundle:' + javalinVersion
    implementation 'org.slf4j:slf4j-simple:1.7.36'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.9.8'

    // Koin
    implementation 'io.insert-koin:koin-core:3.2.0'
    implementation 'io.insert-koin:koin-test:3.2.0'
    
    //JWT
    implementation group: 'com.auth0', name: 'java-jwt', version: '3.4.1'

    // Hikari
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'

    //Exposed
    implementation group: 'org.jetbrains.exposed', name: 'exposed-core', version: exposedVersion
    implementation group: 'org.jetbrains.exposed', name: 'exposed-jodatime', version: exposedVersion
    implementation group: 'org.jetbrains.exposed', name: 'exposed-jdbc', version: exposedVersion
    implementation group: 'org.jetbrains.exposed', name: 'exposed-dao', version: exposedVersion

    //postgres
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.16'

    //flyway
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '6.5.7'

    // Swagger
    implementation group: 'cc.vileda', name: 'kotlin-openapi3-dsl', version: '0.20.1'
    implementation group: 'org.webjars', name: 'swagger-ui', version: '3.22.2'

    // Hibernate validator
    implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '6.1.0.Final'
    implementation group: 'javax.el', name: 'javax.el-api', version: '3.0.1-b06'
    implementation 'org.glassfish.web:javax.el:2.2.6'

    // Cloudinary
    implementation group: 'com.cloudinary', name: 'cloudinary-http44', version: '1.29.0'

    // BCrypt
    implementation 'at.favre.lib:bcrypt:0.9.0'

    //dotenv
    implementation 'io.github.cdimascio:dotenv-kotlin:6.4.1'

    //TESTS

    // H2
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.199'

    //testcontainers postgres
    testImplementation "org.testcontainers:postgresql:1.18.3"

    //test
    testImplementation 'io.mockk:mockk:1.12.4'

}

jar {
    manifest {
        attributes "Main-Class": mainClassName
        attributes 'Multi-Release': 'true'
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from {
        configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

import com.github.jengelman.gradle.plugins.shadow.transformers.ServiceFileTransformer
shadowJar {
    transform(ServiceFileTransformer) {
        path = 'META-INF/services'
        include 'org.eclipse.jetty.http.HttpFieldPreEncoder'
    }
}


compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

ktlint{
    enableExperimentalRules.set(true)
}

tasks.koverMergedVerify {
    excludes = excludedClasses

    rule {
        name = "Minimal line coverage rate in percent"
        bound {
            minValue = 90
        }
    }

}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests'
    group = 'verification'

    filter{
        includeTestsMatching "*IT"
        excludeTestsMatching "*Test*"
    }

}

tasks.register('unitTest', Test) {
    description = 'Runs unit tests'
    group = 'verification'

    filter{
        excludeTestsMatching "*IT"
        includeTestsMatching "*Test*"
    }
}

tasks.koverMergedHtmlReport {
    excludes = excludedClasses // exclusion rules for classes
}

tasks.koverMergedXmlReport {
    excludes = excludedClasses
}